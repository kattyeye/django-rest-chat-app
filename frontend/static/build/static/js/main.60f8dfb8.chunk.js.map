{"version":3,"sources":["rooms/RoomList.js","rooms/RoomForm.js","messages/MessageList.js","messages/MessageForm.js","registration/RegistrationForm.js","login/Login.js","header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["RoomList","props","roomListTitlesHTML","roomList","map","room","i","className","style","padding","value","id","type","onClick","fetchMessagesForThatRoom","name","width","display","flexDirection","alignItems","Room","useState","newRoom","setNewRoom","a","fetch","method","headers","Cookies","get","body","JSON","stringify","response","setRoomList","ok","onSubmit","e","preventDefault","addRoom","htmlFor","placeholder","onChange","target","MessageList","editedMessage","setEditedMessage","isEditing","setIsEditing","deleteMessage","event","then","Error","status","parentNode","remove","updatedMessage","text","chat_room","options","console","log","json","data","message","currentRoom","messageList","username","MessageForm","newMessage","setNewMessage","setMessageList","addMessage","RegistrationForm","error","setError","handleChange","setUser","prevState","user","password1","password2","handleRegistration","required","email","Login","password","userr","setUserr","handleLogin","history","push","Header","to","App","setCurrentRoom","isAuth","setIsAuth","useHistory","messages","useEffect","checkAuth","fetchRooms","handleError","err","warn","catch","set","key","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60f8dfb8.chunk.js","sourcesContent":["export default function RoomList(props) {\n  // const [messageList, setMessageList] = useState([]);\n\n  const roomListTitlesHTML = props.roomList.map((room, i) => (\n    <li\n      key={room.id}\n      className=\"btn-group-vertical\"\n      style={{ padding: \"10px\" }}\n    >\n      <button\n        value={room.id}\n        className=\"room-list-buttons\"\n        type=\"button\"\n        onClick={props.fetchMessagesForThatRoom}\n      >\n        # {room.name}\n      </button>\n    </li>\n  ));\n\n  return (\n    <aside\n      style={{\n        width: \"25%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"flex-start\",\n      }}\n    >\n      <ul>{roomListTitlesHTML}</ul>\n    </aside>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\nexport default function Room(props) {\n  const [newRoom, setNewRoom] = useState({\n    name: \"\",\n  });\n\n  async function addRoom(name) {\n    // const response = await fetch(`/api_v1/rooms/`, {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify(newRoom),\n    // });\n    // props.setRoomList([...props.roomList, newRoom]);\n    // // console.log({ response });\n    // if (response.ok) {\n    //   setNewRoom(name);\n    //   props.setCurrentRoom(newRoom);\n    // }\n    const newRoom = { name };\n    const response = await fetch(`/api_v1/rooms/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n      },\n      body: JSON.stringify(newRoom),\n    });\n    props.setRoomList([...props.roomList, newRoom]);\n\n    if (response.ok) {\n    }\n  }\n\n  function handleChange(e) {\n    setNewRoom(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    addRoom(newRoom);\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className=\"new-room-form\">\n        <label htmlFor=\"new-room\"></label>\n        <input\n          type=\"text\"\n          name=\"name-for-newroom\"\n          placeholder=\"New Room\"\n          onChange={handleChange}\n        />\n        <button className=\"room-add-button\" type=\"submit\">\n          +\n        </button>\n      </form>\n    </div>\n  );\n}\n","import Cookies from \"js-cookie\";\nimport { useState } from \"react\";\nimport Room from \"../rooms/RoomForm\";\nimport MessageItem from \"./MessageItem\";\n\nexport default function MessageList(props) {\n  const [editedMessage, setEditedMessage] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n\n  async function deleteMessage(event) {\n    fetch(`api_v1/messages/${event.target.value}/`, {\n      method: \"DELETE\",\n      headers: {\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n      },\n    }).then((response) => {\n      if (!response.ok) {\n        throw new Error(\"Oops, something went wrong!\", response.status);\n      }\n      event.target.parentNode.remove();\n    });\n  }\n\n  async function editMessage(event, id) {\n    event.preventDefault();\n    const updatedMessage = {\n      text: editedMessage,\n      chat_room: props.room,\n    };\n    // console.log(\"text\", props.messageList[id].text);\n    // // const index = props.messageList.findIndex((message) => message.id === id);\n    // const updatedMessages = [...props.messageList];\n    // updatedMessages[event.target.value] = text;\n    // // setEditedMessage(updatedMessages);\n    // const updated = props.messageList.map((message) => {\n    //   return message.id === id ? updated : message;\n    // });\n    // const updatedMessages = { ...props.messageList };\n    // updatedMessages[updated] = setEditedMessage(updatedMessages);\n    const options = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n      },\n\n      body: JSON.stringify(updatedMessage),\n    };\n    const response = await fetch(`/api_v1/messages/${isEditing}/`, options);\n    if (!response) {\n      console.log(response);\n    } else {\n      const data = await response.json();\n      setEditedMessage({ ...props.message, data });\n      setIsEditing(false);\n    }\n  }\n  function handleChange(event) {\n    setEditedMessage(event.target.value);\n  }\n\n  return (\n    <>\n      <h3># {props.currentRoom.name}</h3>\n      <ul>\n        {isEditing && (\n          <form onSubmit={editMessage}>\n            <input\n              type=\"text\"\n              name=\"newText\"\n              value={props.id}\n              onChange={handleChange}\n            />\n            <button type=\"submit\">Update</button>\n          </form>\n        )}\n        {/* {props.room.name} */}\n        {props.messageList?.map((message) => (\n          <li key={message.id}>\n            <p style={{ padding: \"10px\" }} value={message.id}>\n              {message.username}: {message.text}\n            </p>\n            <button\n              type=\"button\"\n              value={message.id}\n              onClick={() => setIsEditing(message.id)}\n            >\n              Edit\n            </button>\n            <button\n              type=\"click\"\n              className=\"deletebutton\"\n              value={message.id}\n              onClick={deleteMessage}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n        {/* {props.messageList.map((message) => (\n          <MessageItem\n            key={message.id}\n            {...message}\n            deleteMessage={deleteMessage}\n            // editMessage={editMessage}\n          />\n        ))} */}\n      </ul>\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport Room from \"../rooms/RoomForm\";\nimport Cookies from \"js-cookie\";\n\nexport default function MessageForm(props) {\n  const [newMessage, setNewMessage] = useState({\n    text: \"\",\n  });\n\n  async function addMessage(text) {\n    console.log({ text });\n    const newMessage = { text, chat_room: props.currentRoom.id };\n    const response = await fetch(`/api_v1/messages/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n      },\n      body: JSON.stringify(newMessage),\n    });\n    console.log({ response });\n    props.setMessageList([...props.messageList, newMessage]);\n\n    if (response.ok) {\n    }\n  }\n\n  function handleChange(e) {\n    setNewMessage(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    addMessage(newMessage, props.roomList);\n  }\n\n  return (\n    <div className=\"message-form-container\">\n      <label htmlFor=\"sendingmessages\"></label>\n      <form onSubmit={handleSubmit}>\n        <input\n          onChange={handleChange}\n          type=\"text\"\n          placeholder=\"Write a message\"\n        />\n        <button className=\"send-button\" type=\"submit\">\n          Send\n        </button>\n      </form>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function RegistrationForm(props) {\n  const [error, setError] = useState(null);\n  //   const history = useHistory;\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    props.setUser((prevState) => ({\n      ...prevState,\n\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (props.user.password1 !== props.user.password2) {\n      setError(\"Passwords do not match!\");\n    } else {\n      props.handleRegistration(props.user);\n      //   props.history.push(\"/chat\");\n    }\n  };\n\n  return (\n    <form className=\"mt-3 container col-6\" onSubmit={handleSubmit}>\n      <div className=\"form-group text-left mb-3\">\n        <label htmlFor=\"username\">Username</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"username\"\n          placeholder=\"Enter username.\"\n          required\n          name=\"username\"\n          onChange={handleChange}\n          value={props.user.username}\n        />\n      </div>\n      <div className=\"form-group text-left mb-3\">\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          className=\"form-control\"\n          id=\"email\"\n          placeholder=\"Enter email.\"\n          required\n          name=\"email\"\n          onChange={handleChange}\n          value={props.user.email}\n        />\n      </div>\n      <div className=\"form-group text-left mb-3\">\n        <label htmlFor=\"password1\">Password</label>\n        <input\n          type=\"password\"\n          className=\"form-control\"\n          id=\"password1\"\n          placeholder=\"Enter password.\"\n          required\n          name=\"password1\"\n          onChange={handleChange}\n          value={props.user.password1}\n        />\n      </div>\n      <div className=\"form-group text-left mb-3\">\n        <label htmlFor=\"password2\">Confirm your password</label>\n        <input\n          type=\"password\"\n          className=\"form-control\"\n          id=\"password2\"\n          placeholder=\"Re-enter your password.\"\n          required\n          name=\"password2\"\n          onChange={handleChange}\n          value={props.user.password2}\n        />\n        <span className=\"text-danger\">{error}</span>\n      </div>\n      <button type=\"submit\" className=\" mt-3\">\n        Register\n      </button>\n    </form>\n  );\n}\n","import { useState } from \"react\";\nexport default function Login(props) {\n  const [userr, setUserr] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUserr((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.handleLogin(userr);\n    props.history.push(\"/chat\");\n  };\n  return (\n    <form className=\"mt-3 container col-4\" onSubmit={handleSubmit}>\n      <div className=\"form-group text-left mb-3\">\n        <label htmlFor=\"username\">Username</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"username\"\n          placeholder=\"Enter username.\"\n          required\n          name=\"username\"\n          onChange={handleChange}\n          value={userr.username}\n        />\n      </div>\n      {/* <div className=\"form-group text-left mb-3\">\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          className=\"form-control\"\n          id=\"email\"\n          placeholder=\"Enter email.\"\n          required\n          name=\"email\"\n          onChange={handleChange}\n          value={props.email}\n        />\n      </div> */}\n      <div className=\"form-group text-left mb-3\">\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          className=\"form-control\"\n          id=\"password\"\n          placeholder=\"Re-enter your password.\"\n          required\n          name=\"password\"\n          onChange={handleChange}\n          value={userr.password}\n        />\n        <span className=\"text-danger\">{props.error}</span>\n      </div>\n      <button type=\"submit\" className=\" mt-3\">\n        Login\n      </button>\n    </form>\n  );\n}\n","import { NavLink } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport logo from \"../logo.png\";\nexport default function Header(props) {\n  return (\n    <nav className=\"navbar navbar-expand-lg prim-nav-container\">\n      <div className=\"container\">\n        <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li>\n              <NavLink className=\"navbar-brand\" to=\"/\">\n                {/* <img src={logo} /> */}\n                The Chat Room\n              </NavLink>\n            </li>\n            <li className=\"nav-item secondary-nav-item p-3\">\n              <NavLink to=\"/register\">Register</NavLink>\n            </li>\n            <li className=\"nav-item secondary-nav-item p-3\">\n              <NavLink to=\"/login\">Login</NavLink>\n            </li>\n\n            <li className=\"nav-item secondary-nav-item p-3\">\n              <NavLink to=\"/chat\">Chat</NavLink>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport RoomList from \"./rooms/RoomList\";\nimport RoomForm from \"./rooms/RoomForm\";\nimport MessageList from \"./messages/MessageList\";\nimport MessageForm from \"./messages/MessageForm\";\nimport RegistrationForm from \"./registration/RegistrationForm\";\nimport Cookies from \"js-cookie\";\nimport Login from \"./login/Login.js\";\nimport { useHistory, Switch, Route, Redirect } from \"react-router-dom\";\nimport Header from \"./header/Header\";\n\nfunction App() {\n  const [roomList, setRoomList] = useState([]);\n  // const [selection, setSelection] = useState([]);\n  const [messageList, setMessageList] = useState([]);\n  const [user, setUser] = useState({\n    username: \"\",\n    email: \"\",\n    password1: \"\",\n    password2: \"\",\n  });\n  const [currentRoom, setCurrentRoom] = useState({\n    name: \"\",\n    id: null,\n  });\n  const [isAuth, setIsAuth] = useState(null);\n  const history = useHistory();\n  useEffect(() => {\n    const checkAuth = async () => {\n      const response = await fetch(\"/rest-auth/user\");\n      if (!response.ok) {\n        setIsAuth(false);\n        // history.push(\"/login\");\n      } else {\n        setIsAuth(true);\n        // history.push(\"/account\");\n      }\n    };\n    checkAuth();\n  }, [history]);\n\n  useEffect(() => {\n    // async function getUser() {\n    //   if (Cookies.get(\"csrftoken\")) {\n    //     let currentUser = setUser();\n    //   }\n    // }\n    async function fetchRooms() {\n      const response = await fetch(`/api_v1/rooms/`);\n      const data = await response.json();\n      console.log(\"rooms\", data);\n      setRoomList(data);\n    }\n    fetchRooms();\n  }, []);\n\n  async function fetchMessagesForThatRoom(event) {\n    const response = await fetch(`/api_v1/rooms/${event.target.value}/`);\n    const data = await response.json();\n    console.log(\"currentRoom\", data);\n    setCurrentRoom(data);\n    setMessageList(data.messages);\n  }\n\n  // let messages;\n  // if (selection == \"\") {\n  //   messages = roomList.find((message) => message === selection);\n  // }\n\n  // function selectRoom(text) {\n  //   setSelection(text);\n  // }\n\n  const handleError = (err) => {\n    console.warn(err);\n  };\n  const handleRegistration = async (user) => {\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n      },\n      body: JSON.stringify(user),\n    };\n\n    const response = await fetch(\"/rest-auth/registration/\", options).catch(\n      handleError\n    );\n    if (!response === true) {\n      console.warn(response);\n    } else {\n      const data = await response.json();\n      Cookies.set(\"Authorization\", `Token ${data.key}`);\n    }\n  };\n\n  const handleLogin = async (userr) => {\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n      },\n      body: JSON.stringify(userr),\n    };\n\n    const response = await fetch(\"/rest-auth/login/\", options).catch(\n      handleError\n    );\n    if (!response === true) {\n      console.warn(response);\n    } else {\n      const data = await response.json();\n      Cookies.set(\"Authorization\", `Token ${data.key}`);\n    }\n  };\n  async function handleLogoutSubmit(event) {\n    // event.preventDefault();\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n      },\n      body: JSON.stringify(user),\n    };\n    const response = await fetch(\"/rest-auth/logout/\", options);\n    if (!response) {\n      console.log(response);\n    } else {\n      console.log(response);\n      const data = await response.json();\n      Cookies.remove(\"Authorization\");\n      setIsAuth(false);\n      history.push(\"/login\");\n    }\n  }\n\n  return (\n    <div className=\"chatApp\">\n      <nav className=\"nav-bar\">\n        <button onClick={handleLogoutSubmit}>Logout</button>\n      </nav>\n      <Header />\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/register\" />\n        </Route>\n        <Route path=\"/register\">\n          <RegistrationForm\n            user={user}\n            setUser={setUser}\n            handleRegistration={handleRegistration}\n            handleError={handleError}\n          />\n        </Route>\n        <Route path=\"/login\">\n          <Login handleLogin={handleLogin} history={history} />\n        </Route>\n        <Route path=\"/chat\">\n          <div className=\"app-container\">\n            <section className=\"room-list-container\">\n              <RoomList\n                roomList={roomList}\n                fetchMessagesForThatRoom={fetchMessagesForThatRoom}\n                isAuth={isAuth}\n              />\n              <RoomForm\n                roomList={roomList}\n                setRoomList={setRoomList}\n                fetchMessagesForThatRoom={fetchMessagesForThatRoom}\n                setCurrentRoom={setCurrentRoom}\n                isAuth={isAuth}\n              />\n            </section>\n\n            <section className=\"message-list-container\">\n              <MessageList\n                messageList={messageList}\n                roomList={roomList}\n                room={currentRoom.id}\n                currentRoom={currentRoom}\n                isAuth={isAuth}\n              />\n\n              <MessageForm\n                currentRoom={currentRoom}\n                messageList={messageList}\n                setMessageList={setMessageList}\n                roomList={roomList}\n                isAuth={isAuth}\n              />\n            </section>\n          </div>\n        </Route>\n        <Route></Route>\n      </Switch>\n      {/* <div className=\"app-container\">\n        <section className=\"room-list-container\">\n          Rooms\n          <RoomList\n            roomList={roomList}\n            fetchMessagesForThatRoom={fetchMessagesForThatRoom}\n          />\n          <RoomForm\n            roomList={roomList}\n            setRoomList={setRoomList}\n            fetchMessagesForThatRoom={fetchMessagesForThatRoom}\n            setCurrentRoom={setCurrentRoom}\n          />\n        </section>\n        <section className=\"message-list-container\">\n          <MessageList messageList={messageList} roomList={roomList} />\n          <MessageForm\n            currentRoom={currentRoom}\n            messageList={messageList}\n            setMessageList={setMessageList}\n            roomList={roomList}\n          />\n        </section>\n      </div>\n\n      <RegistrationForm\n        user={user}\n        setUser={setUser}\n        handleRegistration={handleRegistration}\n        handleError={handleError}\n      />\n\n      <Login handleLogin={handleLogin} handleError={handleError} /> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}