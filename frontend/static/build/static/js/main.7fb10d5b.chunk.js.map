{"version":3,"sources":["rooms/RoomList.js","rooms/RoomForm.js","messages/MessageList.js","messages/MessageForm.js","registration/RegistrationForm.js","login/Login.js","header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["RoomList","props","roomListTitlesHTML","roomList","map","room","i","className","style","padding","value","id","type","onClick","fetchMessagesForThatRoom","name","width","display","flexDirection","alignItems","Room","useState","newRoom","setNewRoom","a","fetch","method","headers","body","JSON","stringify","response","setRoomList","ok","onSubmit","e","preventDefault","addRoom","htmlFor","placeholder","onChange","target","MessageList","messageList","message","username","text","handleEdit","handleDelete","MessageForm","newMessage","setNewMessage","console","log","chat_room","currentRoom","Cookies","get","setMessageList","addMessage","RegistrationForm","error","setError","handleChange","setUser","prevState","user","password1","password2","handleRegistration","history","push","required","email","Login","password","userr","setUserr","handleLogin","Header","to","src","App","setCurrentRoom","setIsAuth","useHistory","event","json","data","messages","useEffect","checkAuth","fetchRooms","handleError","err","warn","options","catch","set","key","remove","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAAe,SAASA,EAASC,GAG/B,IAAMC,EAAqBD,EAAME,SAASC,KAAI,SAACC,EAAMC,GAAP,OAC5C,oBAEEC,UAAU,qBACVC,MAAO,CAAEC,QAAS,QAHpB,SAKE,yBACEC,MAAOL,EAAKM,GACZJ,UAAU,oBACVK,KAAK,SACLC,QAASZ,EAAMa,yBAJjB,eAMKT,EAAKU,SAVLV,EAAKM,OAed,OACE,uBACEH,MAAO,CACLQ,MAAO,MACPC,QAAS,OACTC,cAAe,SACfC,WAAY,cALhB,SAQE,6BAAKjB,M,YC3BI,SAASkB,EAAKnB,GAC3B,MAA8BoB,mBAAS,CACrCN,KAAM,KADR,mBAAOO,EAAP,KAAgBC,EAAhB,KADkC,4CAKlC,WAAuBR,GAAvB,iBAAAS,EAAA,6DAcQF,EAAU,CAAEP,QAdpB,SAeyBU,MAAM,iBAAkB,CAC7CC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUR,KApBzB,OAeQS,EAfR,OAsBE9B,EAAM+B,YAAN,sBAAsB/B,EAAME,UAA5B,CAAsCmB,KAElCS,EAASE,GAxBf,2CALkC,wBA0ClC,OACE,8BACE,uBAAMC,SAPV,SAAsBC,GACpBA,EAAEC,iBAtC8B,oCAuChCC,CAAQf,IAKwBf,UAAU,gBAAxC,UACE,uBAAO+B,QAAQ,aACf,uBACE1B,KAAK,OACLG,KAAK,mBACLwB,YAAY,WACZC,SAjBR,SAAsBL,GACpBZ,EAAWY,EAAEM,OAAO/B,UAkBhB,wBAAQH,UAAU,kBAAkBK,KAAK,SAAzC,oBCtDO,SAAS8B,EAAYzC,GAClC,OACE,6BAEGA,EAAM0C,YAAYvC,KAAI,SAACwC,GAAD,OACrB,+BACE,oBAAGpC,MAAO,CAAEC,QAAS,QAAUC,MAAOkC,EAAQjC,GAA9C,UACGiC,EAAQC,SADX,KACuBD,EAAQE,QAE/B,wBAAQlC,KAAK,SAASC,QAASZ,EAAM8C,WAArC,kBAGA,wBAAQnC,KAAK,SAASC,QAASZ,EAAM+C,aAArC,sBAPOJ,EAAQjC,S,qBCDV,SAASsC,EAAYhD,GAClC,MAAoCoB,mBAAS,CAC3CyB,KAAM,KADR,mBAAOI,EAAP,KAAmBC,EAAnB,KADyC,4CAKzC,WAA0BL,GAA1B,iBAAAtB,EAAA,6DACE4B,QAAQC,IAAI,CAAEP,SACRI,EAAa,CAAEJ,OAAMQ,UAAWrD,EAAMsD,YAAY5C,IAF1D,SAGyBc,MAAM,oBAAqB,CAChDC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAe6B,IAAQC,IAAI,cAE7B7B,KAAMC,KAAKC,UAAUoB,KATzB,OAGQnB,EAHR,OAWEqB,QAAQC,IAAI,CAAEtB,aACd9B,EAAMyD,eAAN,sBAAyBzD,EAAM0C,aAA/B,CAA4CO,KAExCnB,EAASE,GAdf,2CALyC,wBAgEzC,OACE,sBAAK1B,UAAU,yBAAf,UACE,uBAAO+B,QAAQ,oBACf,uBAAMJ,SARV,SAAsBC,GACpBA,EAAEC,iBA5DqC,oCA6DvCuB,CAAWT,EAAYjD,EAAME,WAM3B,UACE,uBACEqC,SAbR,SAAsBL,GACpBgB,EAAchB,EAAEM,OAAO/B,QAajBE,KAAK,OACL2B,YAAY,oBAEd,wBAAQhC,UAAU,cAAcK,KAAK,SAArC,wB,oBC1EO,SAASgD,EAAiB3D,GACvC,MAA0BoB,mBAAS,MAAnC,mBAAOwC,EAAP,KAAcC,EAAd,KAEMC,EAAe,SAAC5B,GACpB,MAAwBA,EAAEM,OAAlB1B,EAAR,EAAQA,KAAML,EAAd,EAAcA,MACdT,EAAM+D,SAAQ,SAACC,GAAD,mBAAC,eACVA,GADS,kBAGXlD,EAAOL,QAcZ,OACE,uBAAMH,UAAU,OAAO2B,SAXJ,SAACC,GACpBA,EAAEC,iBACEnC,EAAMiE,KAAKC,YAAclE,EAAMiE,KAAKE,UACtCN,EAAS,4BAET7D,EAAMoE,mBAAmBpE,EAAMiE,MAC/BjE,EAAMqE,QAAQC,KAAK,WAKrB,UACE,sBAAKhE,UAAU,4BAAf,UACE,uBAAO+B,QAAQ,WAAf,sBACA,uBACE1B,KAAK,OACLL,UAAU,eACVI,GAAG,WACH4B,YAAY,kBACZiC,UAAQ,EACRzD,KAAK,WACLyB,SAAUuB,EACVrD,MAAOT,EAAMiE,KAAKrB,cAGtB,sBAAKtC,UAAU,4BAAf,UACE,uBAAO+B,QAAQ,QAAf,mBACA,uBACE1B,KAAK,QACLL,UAAU,eACVI,GAAG,QACH4B,YAAY,eACZiC,UAAQ,EACRzD,KAAK,QACLyB,SAAUuB,EACVrD,MAAOT,EAAMiE,KAAKO,WAGtB,sBAAKlE,UAAU,4BAAf,UACE,uBAAO+B,QAAQ,YAAf,sBACA,uBACE1B,KAAK,WACLL,UAAU,eACVI,GAAG,YACH4B,YAAY,kBACZiC,UAAQ,EACRzD,KAAK,YACLyB,SAAUuB,EACVrD,MAAOT,EAAMiE,KAAKC,eAGtB,sBAAK5D,UAAU,4BAAf,UACE,uBAAO+B,QAAQ,YAAf,mCACA,uBACE1B,KAAK,WACLL,UAAU,eACVI,GAAG,YACH4B,YAAY,0BACZiC,UAAQ,EACRzD,KAAK,YACLyB,SAAUuB,EACVrD,MAAOT,EAAMiE,KAAKE,YAEpB,sBAAM7D,UAAU,cAAhB,SAA+BsD,OAEjC,wBAAQjD,KAAK,SAASL,UAAU,uBAAhC,yBC/ES,SAASmE,EAAMzE,GAC5B,MAA0BoB,mBAAS,CACjCwB,SAAU,GACV8B,SAAU,KAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAIMd,EAAe,SAAC5B,GACpB,MAAwBA,EAAEM,OAAlB1B,EAAR,EAAQA,KAAML,EAAd,EAAcA,MACdmE,GAAS,SAACZ,GAAD,mBAAC,eACLA,GADI,kBAENlD,EAAOL,QAQZ,OACE,uBAAMH,UAAU,OAAO2B,SALJ,SAACC,GACpBA,EAAEC,iBACFnC,EAAM6E,YAAYF,IAGlB,UACE,sBAAKrE,UAAU,4BAAf,UACE,uBAAO+B,QAAQ,WAAf,sBACA,uBACE1B,KAAK,OACLL,UAAU,eACVI,GAAG,WACH4B,YAAY,kBACZiC,UAAQ,EACRzD,KAAK,WACLyB,SAAUuB,EACVrD,MAAOkE,EAAM/B,cAgBjB,sBAAKtC,UAAU,4BAAf,UACE,uBAAO+B,QAAQ,WAAf,sBACA,uBACE1B,KAAK,WACLL,UAAU,eACVI,GAAG,WACH4B,YAAY,0BACZiC,UAAQ,EACRzD,KAAK,WACLyB,SAAUuB,EACVrD,MAAOkE,EAAMD,WAEf,sBAAMpE,UAAU,cAAhB,SAA+BN,EAAM4D,WAEvC,wBAAQjD,KAAK,SAASL,UAAU,uBAAhC,sB,WC1DS,SAASwE,EAAO9E,GAC7B,OACE,qBAAKM,UAAU,2BAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,2BAA2BI,GAAG,mBAA7C,SACE,qBAAIJ,UAAU,qBAAd,UACE,6BACE,cAAC,IAAD,CAASA,UAAU,eAAeyE,GAAG,IAArC,SACE,qBAAKC,IAAI,SAGb,oBAAI1E,UAAU,kCAAd,SACE,cAAC,IAAD,CAASyE,GAAG,YAAZ,wBAEF,oBAAIzE,UAAU,kCAAd,SACE,cAAC,IAAD,CAASyE,GAAG,SAAZ,qBAGF,oBAAIzE,UAAU,kCAAd,SACE,cAAC,IAAD,CAASyE,GAAG,QAAZ,6BC4MCE,MArNf,WACE,MAAgC7D,mBAAS,IAAzC,mBAAOlB,EAAP,KAAiB6B,EAAjB,KAEA,EAAsCX,mBAAS,IAA/C,mBAAOsB,EAAP,KAAoBe,EAApB,KACA,EAAwBrC,mBAAS,CAC/BwB,SAAU,GACV4B,MAAO,GACPN,UAAW,GACXC,UAAW,KAJb,mBAAOF,EAAP,KAAaF,EAAb,KAMA,EAAsC3C,mBAAS,CAC7CN,KAAM,GACNJ,GAAI,OAFN,mBAAO4C,EAAP,KAAoB4B,EAApB,KAIA,EAA4B9D,mBAAS,MAArC,mBAAe+D,GAAf,WACMd,EAAUe,IAfH,SA6CEvE,EA7CF,8EA6Cb,WAAwCwE,GAAxC,iBAAA9D,EAAA,sEACyBC,MAAM,iBAAD,OAAkB6D,EAAM7C,OAAO/B,MAA/B,MAD9B,cACQqB,EADR,gBAEqBA,EAASwD,OAF9B,OAEQC,EAFR,OAGEpC,QAAQC,IAAI,cAAemC,GAC3BL,EAAeK,GACf9B,EAAe8B,EAAKC,UALtB,4CA7Ca,sBAgBbC,qBAAU,WACR,IAAMC,EAAS,uCAAG,sBAAAnE,EAAA,sEACOC,MAAM,mBADb,cAEFQ,GAIZmD,GAAU,GAHVA,GAAU,GAHI,2CAAH,qDAUfO,MACC,CAACrB,IAEJoB,qBAAU,WAAM,4CAMd,8BAAAlE,EAAA,sEACyBC,MAAM,kBAD/B,cACQM,EADR,gBAEqBA,EAASwD,OAF9B,OAEQC,EAFR,OAGEpC,QAAQC,IAAI,QAASmC,GACrBxD,EAAYwD,GAJd,4CANc,0DAYdI,KACC,IAmBH,IAAMC,EAAc,SAACC,GACnB1C,QAAQ2C,KAAKD,IAETzB,EAAkB,uCAAG,WAAOH,GAAP,mBAAA1C,EAAA,6DACnBwE,EAAU,CACdtE,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAe6B,IAAQC,IAAI,cAE7B7B,KAAMC,KAAKC,UAAUoC,IAPE,SAUFzC,MAAM,2BAA4BuE,GAASC,MAChEJ,GAXuB,WAaP,MAHZ9D,EAVmB,wBAcvBqB,QAAQ2C,KAAKhE,GAdU,wCAgBJA,EAASwD,OAhBL,QAgBjBC,EAhBiB,OAiBvBhC,IAAQ0C,IAAI,gBAAZ,gBAAsCV,EAAKW,MAjBpB,4CAAH,sDAqBlBrB,EAAW,uCAAG,WAAOF,GAAP,mBAAApD,EAAA,6DACZwE,EAAU,CACdtE,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAe6B,IAAQC,IAAI,cAE7B7B,KAAMC,KAAKC,UAAU8C,IAPL,SAUKnD,MAAM,oBAAqBuE,GAASC,MACzDJ,GAXgB,WAaA,MAHZ9D,EAVY,wBAchBqB,QAAQ2C,KAAKhE,GAdG,wCAgBGA,EAASwD,OAhBZ,QAgBVC,EAhBU,OAiBhBhC,IAAQ0C,IAAI,gBAAZ,gBAAsCV,EAAKW,MAjB3B,4CAAH,sDAtFJ,4CA0Gb,WAAkCb,GAAlC,iBAAA9D,EAAA,6DAEQwE,EAAU,CACdtE,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAe6B,IAAQC,IAAI,cAE7B7B,KAAMC,KAAKC,UAAUoC,IARzB,SAUyBzC,MAAM,qBAAsBuE,GAVrD,UAUQjE,EAVR,uBAYIqB,QAAQC,IAAItB,GAZhB,8BAcIqB,QAAQC,IAAItB,GAdhB,UAeuBA,EAASwD,OAfhC,eAgBI/B,IAAQ4C,OAAO,iBACfhB,GAAU,GAjBd,6CA1Ga,sBAgIb,OACE,sBAAK7E,UAAU,UAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBAAQM,QAnID,4CAmIP,sBAEF,cAACkE,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsB,KAAK,YAAZ,SACE,cAACzC,EAAD,CACEM,KAAMA,EACNF,QAASA,EACTK,mBAAoBA,EACpBwB,YAAaA,MAGjB,cAAC,IAAD,CAAOQ,KAAK,SAAZ,SACE,cAAC3B,EAAD,CAAOI,YAAaA,MAEtB,cAAC,IAAD,CAAOuB,KAAK,QAAZ,SACE,sBAAK9F,UAAU,gBAAf,UACE,0BAASA,UAAU,sBAAnB,kBAEE,cAACP,EAAD,CACEG,SAAUA,EACVW,yBAA0BA,IAE5B,cAACM,EAAD,CACEjB,SAAUA,EACV6B,YAAaA,EACblB,yBAA0BA,EAC1BqE,eAAgBA,OAGpB,0BAAS5E,UAAU,yBAAnB,UACE,cAACmC,EAAD,CAAaC,YAAaA,EAAaxC,SAAUA,IAEjD,cAAC8C,EAAD,CACEM,YAAaA,EACbZ,YAAaA,EACbe,eAAgBA,EAChBvD,SAAUA,YAKlB,cAAC,IAAD,WC9KOmG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7fb10d5b.chunk.js","sourcesContent":["export default function RoomList(props) {\n  // const [messageList, setMessageList] = useState([]);\n\n  const roomListTitlesHTML = props.roomList.map((room, i) => (\n    <li\n      key={room.id}\n      className=\"btn-group-vertical\"\n      style={{ padding: \"10px\" }}\n    >\n      <button\n        value={room.id}\n        className=\"room-list-buttons\"\n        type=\"button\"\n        onClick={props.fetchMessagesForThatRoom}\n      >\n        # {room.name}\n      </button>\n    </li>\n  ));\n\n  return (\n    <aside\n      style={{\n        width: \"25%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"flex-start\",\n      }}\n    >\n      <ul>{roomListTitlesHTML}</ul>\n    </aside>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nexport default function Room(props) {\n  const [newRoom, setNewRoom] = useState({\n    name: \"\",\n  });\n\n  async function addRoom(name) {\n    // const response = await fetch(`/api_v1/rooms/`, {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify(newRoom),\n    // });\n    // props.setRoomList([...props.roomList, newRoom]);\n    // // console.log({ response });\n    // if (response.ok) {\n    //   setNewRoom(name);\n    //   props.setCurrentRoom(newRoom);\n    // }\n    const newRoom = { name };\n    const response = await fetch(`/api_v1/rooms/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newRoom),\n    });\n    props.setRoomList([...props.roomList, newRoom]);\n\n    if (response.ok) {\n    }\n  }\n\n  function handleChange(e) {\n    setNewRoom(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    addRoom(newRoom);\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className=\"new-room-form\">\n        <label htmlFor=\"new-room\"></label>\n        <input\n          type=\"text\"\n          name=\"name-for-newroom\"\n          placeholder=\"New Room\"\n          onChange={handleChange}\n        />\n        <button className=\"room-add-button\" type=\"submit\">\n          +\n        </button>\n      </form>\n    </div>\n  );\n}\n","export default function MessageList(props) {\n  return (\n    <ul>\n      {/* {props.room.name} */}\n      {props.messageList.map((message) => (\n        <li key={message.id}>\n          <p style={{ padding: \"10px\" }} value={message.id}>\n            {message.username}: {message.text}\n          </p>\n          <button type=\"button\" onClick={props.handleEdit}>\n            Edit\n          </button>\n          <button type=\"button\" onClick={props.handleDelete}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport Room from \"../rooms/RoomForm\";\nimport Cookies from \"js-cookie\";\n\nexport default function MessageForm(props) {\n  const [newMessage, setNewMessage] = useState({\n    text: \"\",\n  });\n\n  async function addMessage(text) {\n    console.log({ text });\n    const newMessage = { text, chat_room: props.currentRoom.id };\n    const response = await fetch(`/api_v1/messages/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n      },\n      body: JSON.stringify(newMessage),\n    });\n    console.log({ response });\n    props.setMessageList([...props.messageList, newMessage]);\n\n    if (response.ok) {\n    }\n  }\n  //   async function handleEdit(e) {\n  //     const options = {\n  //       method: \"PUT\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //         \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n  //       },\n\n  //       body: JSON.stringify(newMessage),\n  //     };\n  //     const response = await fetch(\n  //       `/api_v1/messages/${e.target.value}/`,\n  //       options\n  //     );\n  //     if (!response) {\n  //       console.log(response);\n  //     } else {\n  //       const data = await response.json();\n  //       //   setNewMessage(data);\n  //     }\n  //   }\n  function handleDelete(event) {\n    const id = event.target.dataset.id;\n\n    fetch(`api_v1/messages/${id}`, {\n      method: \"DELETE\",\n    }).then((response) => {\n      if (!response.ok) {\n        throw new Error(\"Oops, something went wrong!\", response.status);\n      }\n      event.target.parentNode.remove();\n    });\n  }\n\n  function handleChange(e) {\n    setNewMessage(e.target.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    addMessage(newMessage, props.roomList);\n  }\n\n  return (\n    <div className=\"message-form-container\">\n      <label htmlFor=\"sendingmessages\"></label>\n      <form onSubmit={handleSubmit}>\n        <input\n          onChange={handleChange}\n          type=\"text\"\n          placeholder=\"Write a message\"\n        />\n        <button className=\"send-button\" type=\"submit\">\n          Send\n        </button>\n      </form>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function RegistrationForm(props) {\n  const [error, setError] = useState(null);\n  //   const history = useHistory;\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    props.setUser((prevState) => ({\n      ...prevState,\n\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (props.user.password1 !== props.user.password2) {\n      setError(\"Passwords do not match!\");\n    } else {\n      props.handleRegistration(props.user);\n      props.history.push(\"/chat\");\n    }\n  };\n\n  return (\n    <form className=\"mt-3\" onSubmit={handleSubmit}>\n      <div className=\"form-group text-left mb-3\">\n        <label htmlFor=\"username\">Username</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"username\"\n          placeholder=\"Enter username.\"\n          required\n          name=\"username\"\n          onChange={handleChange}\n          value={props.user.username}\n        />\n      </div>\n      <div className=\"form-group text-left mb-3\">\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          className=\"form-control\"\n          id=\"email\"\n          placeholder=\"Enter email.\"\n          required\n          name=\"email\"\n          onChange={handleChange}\n          value={props.user.email}\n        />\n      </div>\n      <div className=\"form-group text-left mb-3\">\n        <label htmlFor=\"password1\">Password</label>\n        <input\n          type=\"password\"\n          className=\"form-control\"\n          id=\"password1\"\n          placeholder=\"Enter password.\"\n          required\n          name=\"password1\"\n          onChange={handleChange}\n          value={props.user.password1}\n        />\n      </div>\n      <div className=\"form-group text-left mb-3\">\n        <label htmlFor=\"password2\">Confirm your password</label>\n        <input\n          type=\"password\"\n          className=\"form-control\"\n          id=\"password2\"\n          placeholder=\"Re-enter your password.\"\n          required\n          name=\"password2\"\n          onChange={handleChange}\n          value={props.user.password2}\n        />\n        <span className=\"text-danger\">{error}</span>\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary mt-3\">\n        Register\n      </button>\n    </form>\n  );\n}\n","import { useState } from \"react\";\nexport default function Login(props) {\n  const [userr, setUserr] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUserr((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.handleLogin(userr);\n  };\n  return (\n    <form className=\"mt-3\" onSubmit={handleSubmit}>\n      <div className=\"form-group text-left mb-3\">\n        <label htmlFor=\"username\">Username</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"username\"\n          placeholder=\"Enter username.\"\n          required\n          name=\"username\"\n          onChange={handleChange}\n          value={userr.username}\n        />\n      </div>\n      {/* <div className=\"form-group text-left mb-3\">\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          className=\"form-control\"\n          id=\"email\"\n          placeholder=\"Enter email.\"\n          required\n          name=\"email\"\n          onChange={handleChange}\n          value={props.email}\n        />\n      </div> */}\n      <div className=\"form-group text-left mb-3\">\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          className=\"form-control\"\n          id=\"password\"\n          placeholder=\"Re-enter your password.\"\n          required\n          name=\"password\"\n          onChange={handleChange}\n          value={userr.password}\n        />\n        <span className=\"text-danger\">{props.error}</span>\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary mt-3\">\n        Login\n      </button>\n    </form>\n  );\n}\n","import { NavLink } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nexport default function Header(props) {\n  return (\n    <nav className=\"navbar navbar-expand-lg \">\n      <div className=\"container\">\n        <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li>\n              <NavLink className=\"navbar-brand\" to=\"/\">\n                <img src=\"\" />\n              </NavLink>\n            </li>\n            <li className=\"nav-item secondary-nav-item p-3\">\n              <NavLink to=\"/register\">Register</NavLink>\n            </li>\n            <li className=\"nav-item secondary-nav-item p-3\">\n              <NavLink to=\"/login\">Login</NavLink>\n            </li>\n\n            <li className=\"nav-item secondary-nav-item p-3\">\n              <NavLink to=\"/chat\">Chat</NavLink>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport RoomList from \"./rooms/RoomList\";\nimport RoomForm from \"./rooms/RoomForm\";\nimport MessageList from \"./messages/MessageList\";\nimport MessageForm from \"./messages/MessageForm\";\nimport RegistrationForm from \"./registration/RegistrationForm\";\nimport Cookies from \"js-cookie\";\nimport Login from \"./login/Login.js\";\nimport { useHistory, Switch, Route, withRouter } from \"react-router-dom\";\nimport Header from \"./header/Header\";\n\nfunction App() {\n  const [roomList, setRoomList] = useState([]);\n  // const [selection, setSelection] = useState([]);\n  const [messageList, setMessageList] = useState([]);\n  const [user, setUser] = useState({\n    username: \"\",\n    email: \"\",\n    password1: \"\",\n    password2: \"\",\n  });\n  const [currentRoom, setCurrentRoom] = useState({\n    name: \"\",\n    id: null,\n  });\n  const [isAuth, setIsAuth] = useState(null);\n  const history = useHistory;\n  useEffect(() => {\n    const checkAuth = async () => {\n      const response = await fetch(\"/rest-auth/user\");\n      if (!response.ok) {\n        setIsAuth(false);\n        // history.push(\"/login\");\n      } else {\n        setIsAuth(true);\n        // history.push(\"/account\");\n      }\n    };\n    checkAuth();\n  }, [history]);\n\n  useEffect(() => {\n    // async function getUser() {\n    //   if (Cookies.get(\"csrftoken\")) {\n    //     let currentUser = setUser();\n    //   }\n    // }\n    async function fetchRooms() {\n      const response = await fetch(`/api_v1/rooms/`);\n      const data = await response.json();\n      console.log(\"rooms\", data);\n      setRoomList(data);\n    }\n    fetchRooms();\n  }, []);\n\n  async function fetchMessagesForThatRoom(event) {\n    const response = await fetch(`/api_v1/rooms/${event.target.value}/`);\n    const data = await response.json();\n    console.log(\"currentRoom\", data);\n    setCurrentRoom(data);\n    setMessageList(data.messages);\n  }\n\n  // let messages;\n  // if (selection == \"\") {\n  //   messages = roomList.find((message) => message === selection);\n  // }\n\n  // function selectRoom(text) {\n  //   setSelection(text);\n  // }\n\n  const handleError = (err) => {\n    console.warn(err);\n  };\n  const handleRegistration = async (user) => {\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n      },\n      body: JSON.stringify(user),\n    };\n\n    const response = await fetch(\"/rest-auth/registration/\", options).catch(\n      handleError\n    );\n    if (!response === true) {\n      console.warn(response);\n    } else {\n      const data = await response.json();\n      Cookies.set(\"Authorization\", `Token ${data.key}`);\n    }\n  };\n\n  const handleLogin = async (userr) => {\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n      },\n      body: JSON.stringify(userr),\n    };\n\n    const response = await fetch(\"/rest-auth/login/\", options).catch(\n      handleError\n    );\n    if (!response === true) {\n      console.warn(response);\n    } else {\n      const data = await response.json();\n      Cookies.set(\"Authorization\", `Token ${data.key}`);\n    }\n  };\n  async function handleLogoutSubmit(event) {\n    // event.preventDefault();\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n      },\n      body: JSON.stringify(user),\n    };\n    const response = await fetch(\"/rest-auth/logout/\", options);\n    if (!response) {\n      console.log(response);\n    } else {\n      console.log(response);\n      const data = await response.json();\n      Cookies.remove(\"Authorization\");\n      setIsAuth(false);\n      // history.push(\"/login\");\n    }\n  }\n\n  return (\n    <div className=\"chatApp\">\n      <nav className=\"nav-bar\">\n        <button onClick={handleLogoutSubmit}>Logout</button>\n      </nav>\n      <Header />\n\n      <Switch>\n        <Route path=\"/register\">\n          <RegistrationForm\n            user={user}\n            setUser={setUser}\n            handleRegistration={handleRegistration}\n            handleError={handleError}\n          />\n        </Route>\n        <Route path=\"/login\">\n          <Login handleLogin={handleLogin} />\n        </Route>\n        <Route path=\"/chat\">\n          <div className=\"app-container\">\n            <section className=\"room-list-container\">\n              Rooms\n              <RoomList\n                roomList={roomList}\n                fetchMessagesForThatRoom={fetchMessagesForThatRoom}\n              />\n              <RoomForm\n                roomList={roomList}\n                setRoomList={setRoomList}\n                fetchMessagesForThatRoom={fetchMessagesForThatRoom}\n                setCurrentRoom={setCurrentRoom}\n              />\n            </section>\n            <section className=\"message-list-container\">\n              <MessageList messageList={messageList} roomList={roomList} />\n\n              <MessageForm\n                currentRoom={currentRoom}\n                messageList={messageList}\n                setMessageList={setMessageList}\n                roomList={roomList}\n              />\n            </section>\n          </div>\n        </Route>\n        <Route></Route>\n      </Switch>\n      {/* <div className=\"app-container\">\n        <section className=\"room-list-container\">\n          Rooms\n          <RoomList\n            roomList={roomList}\n            fetchMessagesForThatRoom={fetchMessagesForThatRoom}\n          />\n          <RoomForm\n            roomList={roomList}\n            setRoomList={setRoomList}\n            fetchMessagesForThatRoom={fetchMessagesForThatRoom}\n            setCurrentRoom={setCurrentRoom}\n          />\n        </section>\n        <section className=\"message-list-container\">\n          <MessageList messageList={messageList} roomList={roomList} />\n          <MessageForm\n            currentRoom={currentRoom}\n            messageList={messageList}\n            setMessageList={setMessageList}\n            roomList={roomList}\n          />\n        </section>\n      </div>\n\n      <RegistrationForm\n        user={user}\n        setUser={setUser}\n        handleRegistration={handleRegistration}\n        handleError={handleError}\n      />\n\n      <Login handleLogin={handleLogin} handleError={handleError} /> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}